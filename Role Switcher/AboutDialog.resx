<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>